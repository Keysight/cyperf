{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "\n    Stack creating a VPC and launch EC2 instances within it.\n    **WARNING** This template creates Amazon EC2 instances.\n    You will be billed for the AWS resources used if you create\n    a stack from this template. **WARNING** This template creates\n    role for the launching/deleting instances/subnets/interfaces.\n    This role will invoke AWSLambdaBasicExecutionRole, please see\n    AWS Documentation for details on AWSLambdaBasicExecutionRole.",
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "AMIxAPPLICATION": "ami-01a1e5be6dcd03ddf",
                "AMIxBROKER": "ami-0e3f375a6cd151536",
                "AMIxAGENT": "ami-0080f15892711a708",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "US East (N. Virginia)",
                "REGIONxTAG": "US_EAST_1"
            },
            "us-east-2": {
                "AMIxAPPLICATION": "ami-03be086bc98202396",
                "AMIxBROKER": "ami-0cc39f8e3cb783e6f",
                "AMIxAGENT": "ami-06791f920019e5c2a",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.16.146.0/29",
                "EC2xREGION": "US East (Ohio)",
                "REGIONxTAG": "US_EAST_2"
            },
            "us-west-1": {
                "AMIxAPPLICATION": "ami-0ee6e49c4104f5a26",
                "AMIxBROKER": "ami-0412b27d2ae49ca1d",
                "AMIxAGENT": "ami-03e0f63349ba154a4",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.52.6.112/29",
                "EC2xREGION": "US West (N. California)",
                "REGIONxTAG": "US_WEST_1"
            },
            "us-west-2": {
                "AMIxAPPLICATION": "ami-0b179c0697d47cbeb",
                "AMIxBROKER": "ami-0a3426dab45a99e76",
                "AMIxAGENT": "ami-0694debf637d798f1",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.237.140.160/29",
                "EC2xREGION": "US West (Oregon)",
                "REGIONxTAG": "US_WEST_2"
            },
            "ap-east-1": {
                "AMIxAPPLICATION": "ami-00000000000000000",
                "AMIxBROKER": "ami-00000000000000000",
                "AMIxAGENT": "ami-00000000000000000",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "Asia Pacific (Hong Kong)",
                "REGIONxTAG": "AP_EAST_1"
            },
            "ap-south-1": {
                "AMIxAPPLICATION": "ami-0778dfda8f19e5204",
                "AMIxBROKER": "ami-03a2cd83318fc2cee",
                "AMIxAGENT": "ami-0128412af7f032613",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.233.177.0/29",
                "EC2xREGION": "Asia Pacific (Mumbai)",
                "REGIONxTAG": "AP_SOUTH_1"
            },
            "ap-northeast-2": {
                "AMIxAPPLICATION": "ami-0b6cbe3cc2bc7ec4d",
                "AMIxBROKER": "ami-01cde52a647fa2e49",
                "AMIxAGENT": "ami-0f6df4560f4f78199",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.209.1.56/29",
                "EC2xREGION": "Asia Pacific (Seoul)",
                "REGIONxTAG": "AP_NORTHEAST_2"
            },
            "ap-southeast-1": {
                "AMIxAPPLICATION": "ami-00a9b6161d37475ed",
                "AMIxBROKER": "ami-0dc39ae14f218ddf1",
                "AMIxAGENT": "ami-05a22a3759d757309",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.0.5.32/29",
                "EC2xREGION": "Asia Pacific (Singapore)",
                "REGIONxTAG": "AP_SOUTHEAST_1"
            },
            "ap-southeast-2": {
                "AMIxAPPLICATION": "ami-0e94565669dc24309",
                "AMIxBROKER": "ami-00e9e7791cf84f916",
                "AMIxAGENT": "ami-074f9ee4003615d35",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.239.158.0/29",
                "EC2xREGION": "Asia Pacific (Sydney)",
                "REGIONxTAG": "AP_SOUTHEAST_2"
            },
            "ap-northeast-1": {
                "AMIxAPPLICATION": "ami-0223091bf2d716459",
                "AMIxBROKER": "ami-0f8d7ea4334a03997",
                "AMIxAGENT": "ami-09ceee14b9dd70a27",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.112.23.0/29",
                "EC2xREGION": "Asia Pacific (Tokyo)",
                "REGIONxTAG": "AP_NORTHEAST_1"
            },
            "ca-central-1": {
                "AMIxAPPLICATION": "ami-07441b18ab8b0d30f",
                "AMIxBROKER": "ami-09b331e52e99136b2",
                "AMIxAGENT": "ami-0f705adb77997e428",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "35.183.92.176/29",
                "EC2xREGION": "Canada (Central)",
                "REGIONxTAG": "CA_CENTRAL_1"
            },
            "eu-central-1": {
                "AMIxAPPLICATION": "ami-02161d4b3bdc65b7d",
                "AMIxBROKER": "ami-0beac7f073ec278c1",
                "AMIxAGENT": "ami-02e66712020703752",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.120.181.40/29",
                "EC2xREGION": "EU (Frankfurt)",
                "REGIONxTAG": "EU_CENTRAL_1"
            },
            "eu-west-1": {
                "AMIxAPPLICATION": "ami-0bc569a88cdb53fe1",
                "AMIxBROKER": "ami-0220cc30b66ba1552",
                "AMIxAGENT": "ami-0690cd6d1f867967f",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.202.216.48/29",
                "EC2xREGION": "EU (Ireland)",
                "REGIONxTAG": "EU_WEST_1"
            },
            "eu-west-2": {
                "AMIxAPPLICATION": "ami-0e82b82ede6d2aea9",
                "AMIxBROKER": "ami-03fa833f8616b9bc9",
                "AMIxAGENT": "ami-038df82d2d70beb9c",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.8.37.24/29",
                "EC2xREGION": "EU (London)",
                "REGIONxTAG": "EU_WEST_2"
            },
            "eu-west-3": {
                "AMIxAPPLICATION": "ami-03c60e6658509b5a0",
                "AMIxBROKER": "ami-0ed44c88c1380aeae",
                "AMIxAGENT": "ami-0713d91faa5a19c0e",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "35.180.112.80/29",
                "EC2xREGION": "EU (Paris)",
                "REGIONxTAG": "EU_WEST_3"
            },
            "eu-north-1": {
                "AMIxAPPLICATION": "ami-0deb9e584e849d179",
                "AMIxBROKER": "ami-01716df2a62dc9934",
                "AMIxAGENT": "ami-010ef2dbd6c966c9c",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "EU (Stockholm)",
                "REGIONxTAG": "EU_NORTH_1"
            },
            "me-south-1": {
                "AMIxAPPLICATION": "ami-00000000000000000",
                "AMIxBROKER": "ami-00000000000000000",
                "AMIxAGENT": "ami-00000000000000000",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "Middle East (Bahrain)",
                "REGIONxTAG": "ME_SOUTH_1"
            },
            "sa-east-1": {
                "AMIxAPPLICATION": "ami-063aa74af97d34345",
                "AMIxBROKER": "ami-0d9d476d795ffe112",
                "AMIxAGENT": "ami-074b08e1ed40670b1",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "South America (Sao Paulo)",
                "REGIONxTAG": "SA_EAST_1"
            }
        },
        "VariableMap": {
            "global": {
                "OPTIONSxTAG": "MANUAL",
                "PROJECTxTAG": "CyPerf"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORK CONFIGURATION"
                    }
                },
                {
                    "Label": {
                        "default": "VPC Configuration"
                    },
                    "Parameters": [
                        "Username",
                        "Project",
                        "VPCCIDR",
                        "AvailabilityZone"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Controller Configuration"
                    },
                    "Parameters": [
                        "ControllerDeploymentType",
                        "ControllerNetworkCIDR",
                        "KeyNameForCyPerfController"
                    ]
                },
                {
                    "Label": {
                        "default": "Security-Group Configuration"
                    },
                    "Parameters": [
                        "AllowedSubnet"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZone": {
                    "default": "Availability Zone"
                },
                "InstanceTypeForCyPerfAgent": {
                    "default": "Instance Type for CyPerf Agents"
                },
                "ControllerNetworkCIDR": {
                    "default": "Management Subnet for CyPerf Controller"
                },
                "KeyNameForCyPerfController": {
                    "default": "SSH Key"
                },
                "ControllerDeploymentType": {
                    "default": "CyPerf Controller/UI, Controller-proxy"
                },
                "AllowedSubnet": {
                    "default": "Allowed Subnet for Security Group"
                },
                "VPCCIDR": {
                    "default": "VPC"
                }
            }
        }
    },
    "Outputs": {
        "CyPerfUIINstanceDNS": {
            "Description": "DNS name of CyPerf Controller instance",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "CyPerfUI",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "AvailabilityZone": {
            "Default": "<Select preffered availability zone from drop down>",
            "Description": "Preferred availability zone",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "ControllerNetworkCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.1.0/24",
            "Description": "This subnet is attached to CyPerf controller and would be used to access the CyPerf controllers' UI",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "ControllerDeploymentType": {
            "Description": "If Contoller deployment type is 'controller', CyPerf controller will be dployed and Agents will registered to controller. If type is 'controller-proxy', CyPerf controller-proxy will be dployed and Agents will registered to controller-proxy.",
            "Default": "controller",
            "Type": "String",
            "AllowedValues": [
                "controller",
                "controller-proxy"
            ],
            "ConstraintDescription": "must specify controller , controller-proxy"
        },
        "KeyNameForCyPerfController": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair",
            "Default": "CyPerf-keypair",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the CyPerf Controller",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "AllowedSubnet": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "1.1.1.1/1",
            "Description": "Subnet range allowed to access deployed AWS resources. Execute 'curl ifconfig.co' to know MyIP or google for \u201cwhat is my IP\u201d",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "Project": {
            "Default": "CyPerf-AWS",
            "Description": "Project Name",
            "Type": "String"
        },
        "Username": {
            "Default": "<UserName>@<domainname>",
            "Description": "Team or Individual email id responsible for the Stack",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.0.0/16",
            "Description": "CIDR range for the VPC",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        }
    },
    "Conditions": {
        "CreateController": {
            "Fn::Equals": [
                {
                    "Ref": "ControllerDeploymentType"
                },
                "controller"
            ]
        },
        "CreateControllerProxy": {
            "Fn::Equals": [
                {
                    "Ref": "ControllerDeploymentType"
                },
                "controller-proxy"
            ]
        }
    },
    "Resources": {
        "DhcpOptionsAssociation": {
            "Properties": {
                "DhcpOptionsId": {
                    "Ref": "VPCxDhcpOptions"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation"
        },
        "DefaultEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Fn::GetAtt": [
                        "VPC",
                        "DefaultSecurityGroup"
                    ]
                },
                "IpProtocol": "-1",
                "SourceSecurityGroupId": {
                    "Fn::GetAtt": [
                        "VPC",
                        "DefaultSecurityGroup"
                    ]
                }
            }
        },
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-gateway"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "InternetGatewayAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "CyPerfUISecurityGroup": {
            "Condition": "CreateController",
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "All Traffic",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "30422",
                        "IpProtocol": "tcp",
                        "ToPort": "30422"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CyPerfUISG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "CyPerfControllerProxySecurityGroup": {
            "Condition": "CreateControllerProxy",
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "All Traffic",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "30422",
                        "IpProtocol": "tcp",
                        "ToPort": "30422"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CyPerfControllerProxySG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "CyPerfUI": {
            "Condition": "CreateController",
            "DependsOn": [
                "mdweth0"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxAPPLICATION"
                    ]
                },
                "InstanceType": "c4.2xlarge",
                "KeyName": {
                    "Ref": "KeyNameForCyPerfController"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "mdweth0"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Controller"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "CyPerfControllerProxy": {
            "DependsOn": [
                "proxyeth0"
            ],
            "Condition": "CreateControllerProxy",
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxBROKER"
                    ]
                },
                "InstanceType": "t2.medium",
                "KeyName": {
                    "Ref": "KeyNameForCyPerfController"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "proxyeth0"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ControllerProxy"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "PublicRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "public-rt"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "ControllerManagementSubnetRouteTable": {
            "DependsOn": "ControllerManagementSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "RouteToInternet": {
            "DependsOn": "InternetGatewayAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ControllerManagementSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "CidrBlock": {
                    "Ref": "ControllerNetworkCIDR"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Controller Management Subnet"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "VPC": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "VPCxDhcpOptions": {
            "Properties": {
                "DomainName": "VPCxDhcpOptions",
                "DomainNameServers": [
                    "8.8.8.8",
                    "8.8.4.4",
                    "AmazonProvidedDNS"
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "CyPerfVPCx"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::DHCPOptions"
        },
        "mdweth0": {
            "Condition": "CreateController",
            "Properties": {
                "Description": "MDW eth0",
                "GroupSet": [
                    {
                        "Ref": "CyPerfUISecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "MB-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "proxyeth0": {
            "Condition": "CreateControllerProxy",
            "Properties": {
                "Description": "Controller Proxy eth0",
                "GroupSet": [
                    {
                        "Ref": "CyPerfControllerProxySecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ControllerProxy-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        }
    }
}