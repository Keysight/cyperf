{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "\n    Stack creating a VPC and launch EC2 instances within it.\n    **WARNING** This template creates Amazon EC2 instances.\n    You will be billed for the AWS resources used if you create\n    a stack from this template. **WARNING** This template creates\n    role for the launching/deleting instances/subnets/interfaces.\n    This role will invoke AWSLambdaBasicExecutionRole, please see\n    AWS Documentation for details on AWSLambdaBasicExecutionRole.",
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "AMIxAPPLICATION": "ami-08f32411dad7ca6ff",
                "AMIxBROKER": "ami-048c35a288caa24ac",
                "AMIxAGENT": "ami-0bbdc82abb59fb16a",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "US East (N. Virginia)",
                "REGIONxTAG": "US_EAST_1"
            },
            "us-east-2": {
                "AMIxAPPLICATION": "ami-0ca108ce82e8dd417",
                "AMIxBROKER": "ami-0e9ee887005c5f127",
                "AMIxAGENT": "ami-045ae5841a56b03f3",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.16.146.0/29",
                "EC2xREGION": "US East (Ohio)",
                "REGIONxTAG": "US_EAST_2"
            },
            "us-west-1": {
                "AMIxAPPLICATION": "ami-05f9a0451a3a08e4c",
                "AMIxBROKER": "ami-0d8b44208a26629a5",
                "AMIxAGENT": "ami-059c749369a335a00",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.52.6.112/29",
                "EC2xREGION": "US West (N. California)",
                "REGIONxTAG": "US_WEST_1"
            },
            "us-west-2": {
                "AMIxAPPLICATION": "ami-091b212aad515b771",
                "AMIxBROKER": "ami-0eb9c8ae17dcc196d",
                "AMIxAGENT": "ami-035aad93246aa9543",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.237.140.160/29",
                "EC2xREGION": "US West (Oregon)",
                "REGIONxTAG": "US_WEST_2"
            },
            "ap-east-1": {
                "AMIxAPPLICATION": "ami-00000000000000000",
                "AMIxBROKER": "ami-00000000000000000",
                "AMIxAGENT": "ami-00000000000000000",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "Asia Pacific (Hong Kong)",
                "REGIONxTAG": "AP_EAST_1"
            },
            "ap-south-1": {
                "AMIxAPPLICATION": "ami-07976c9f7137a801d",
                "AMIxBROKER": "ami-0797746a4f62db1f7",
                "AMIxAGENT": "ami-04eef2785b91a6b49",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.233.177.0/29",
                "EC2xREGION": "Asia Pacific (Mumbai)",
                "REGIONxTAG": "AP_SOUTH_1"
            },
            "ap-south-2": {
                "AMIxAPPLICATION": "ami-09ab415b31191ac05",
                "AMIxBROKER": "ami-09d07236c9cda5de7",
                "AMIxAGENT": "ami-051300268d5175af0",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.233.177.0/29",
                "EC2xREGION": "Asia Pacific (Hyderabad)",
                "REGIONxTAG": "AP_SOUTH_2"
            },
            "ap-northeast-2": {
                "AMIxAPPLICATION": "ami-02ca8b5cb2b94ccd2",
                "AMIxBROKER": "ami-083e56ab7f43d5278",
                "AMIxAGENT": "ami-0b3d64e62f7df6859",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.209.1.56/29",
                "EC2xREGION": "Asia Pacific (Seoul)",
                "REGIONxTAG": "AP_NORTHEAST_2"
            },
            "ap-southeast-1": {
                "AMIxAPPLICATION": "ami-05406a33d158b2d70",
                "AMIxBROKER": "ami-079ee29e26ab7eb32",
                "AMIxAGENT": "ami-032f6f8fd09e1bd43",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.0.5.32/29",
                "EC2xREGION": "Asia Pacific (Singapore)",
                "REGIONxTAG": "AP_SOUTHEAST_1"
            },
            "ap-southeast-2": {
                "AMIxAPPLICATION": "ami-00eafea944fd61ce8",
                "AMIxBROKER": "ami-05384301605edd83f",
                "AMIxAGENT": "ami-06e6cd9bdd314f012",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.239.158.0/29",
                "EC2xREGION": "Asia Pacific (Sydney)",
                "REGIONxTAG": "AP_SOUTHEAST_2"
            },
            "ap-northeast-1": {
                "AMIxAPPLICATION": "ami-0bb1fe2a1b5556e61",
                "AMIxBROKER": "ami-00f858e80704564d7",
                "AMIxAGENT": "ami-04d93a0df5af3f943",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.112.23.0/29",
                "EC2xREGION": "Asia Pacific (Tokyo)",
                "REGIONxTAG": "AP_NORTHEAST_1"
            },
            "ca-central-1": {
                "AMIxAPPLICATION": "ami-0615a784c6cd95fb3",
                "AMIxBROKER": "ami-04a8e858c59933e8a",
                "AMIxAGENT": "ami-0a52f5db57c19d01a",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "35.183.92.176/29",
                "EC2xREGION": "Canada (Central)",
                "REGIONxTAG": "CA_CENTRAL_1"
            },
            "eu-central-1": {
                "AMIxAPPLICATION": "ami-0fda6e009713b8f3a",
                "AMIxBROKER": "ami-0b6a1c8ce31226077",
                "AMIxAGENT": "ami-0c23ac18f0c02c586",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.120.181.40/29",
                "EC2xREGION": "EU (Frankfurt)",
                "REGIONxTAG": "EU_CENTRAL_1"
            },
            "eu-west-1": {
                "AMIxAPPLICATION": "ami-00f663fc41e1d643f",
                "AMIxBROKER": "ami-00663bba217e0945e",
                "AMIxAGENT": "ami-0559d81141a8f2484",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.202.216.48/29",
                "EC2xREGION": "EU (Ireland)",
                "REGIONxTAG": "EU_WEST_1"
            },
            "eu-west-2": {
                "AMIxAPPLICATION": "ami-034dced1dc80370a4",
                "AMIxBROKER": "ami-0079f10ab7a38abf4",
                "AMIxAGENT": "ami-06d731d125fa40620",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.8.37.24/29",
                "EC2xREGION": "EU (London)",
                "REGIONxTAG": "EU_WEST_2"
            },
            "eu-west-3": {
                "AMIxAPPLICATION": "ami-0303a3eb368c98ddf",
                "AMIxBROKER": "ami-0bee157fadd4ce420",
                "AMIxAGENT": "ami-03770cf027d692363",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "35.180.112.80/29",
                "EC2xREGION": "EU (Paris)",
                "REGIONxTAG": "EU_WEST_3"
            },
            "eu-north-1": {
                "AMIxAPPLICATION": "ami-0aef6347f0b3b3ae7",
                "AMIxBROKER": "ami-09dee257a09d281aa",
                "AMIxAGENT": "ami-00959888333720b07",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "EU (Stockholm)",
                "REGIONxTAG": "EU_NORTH_1"
            },
            "me-south-1": {
                "AMIxAPPLICATION": "ami-00000000000000000",
                "AMIxBROKER": "ami-00000000000000000",
                "AMIxAGENT": "ami-00000000000000000",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "Middle East (Bahrain)",
                "REGIONxTAG": "ME_SOUTH_1"
            },
            "sa-east-1": {
                "AMIxAPPLICATION": "ami-0f44e34b8ca4c2d71",
                "AMIxBROKER": "ami-06cd3a3410f78daa1",
                "AMIxAGENT": "ami-0eed92c5f7198ec40",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "South America (Sao Paulo)",
                "REGIONxTAG": "SA_EAST_1"
            }
        },
        "VariableMap": {
            "global": {
                "OPTIONSxTAG": "MANUAL",
                "PROJECTxTAG": "CyPerf"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORK CONFIGURATION"
                    }
                },
                {
                    "Label": {
                        "default": "VPC Configuration"
                    },
                    "Parameters": [
                        "Username",
                        "Project",
                        "VPCCIDR",
                        "AvailabilityZone",
                        "AuthUsername",
                        "AuthPassword",
                        "AuthFingerprint"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Controller Configuration"
                    },
                    "Parameters": [
                        "ControllerNetworkCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Agent Configuration"
                    },
                    "Parameters": [
                        "DeployClientAgent",
                        "DeployServerAgent",
                        "EC2RoleForTags",
                        "InstanceTypeForCyPerfAgent",
                        "KeyNameForCyPerfAgent",
                        "AgentControlCIDR",
                        "AgentTestCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Security-Group Configuration"
                    },
                    "Parameters": [
                        "AllowedSubnet"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZone": {
                    "default": "Availability Zone"
                },
                "InstanceTypeForCyPerfAgent": {
                    "default": "Instance Type for CyPerf Agents"
                },
                "KeyNameForCyPerfAgent": {
                    "default": "SSH Key"
                },
                "DeployClientAgent": {
                    "default": "Deploy Client Agent"
                },
                "DeployServerAgent": {
                    "default": "Deploy Server Agent"
                },
                "ControllerNetworkCIDR": {
                    "default": "Management Subnet for CyPerf Controller"
                },
                "AgentControlCIDR": {
                    "default": "Control Subnet for CyPerf Agents"
                },
                "AllowedSubnet": {
                    "default": "Allowed Subnet for Security Group"
                },
                "AgentTestCIDR": {
                    "default": "Test Subnet for CyPerf Agents"
                },
                "VPCCIDR": {
                    "default": "VPC"
                },
                "AuthUsername": {
                    "default": "Authentication Username"
                },
                "AuthPassword": {
                    "default": "Authentication Password"
                },
                "AuthFingerprint": {
                    "default": "Authentication Fingerprint"
                }
            }
        }
    },
    "Outputs": {
        "CyPerfUIINstanceDNS": {
            "Description": "DNS name of CyPerf Controller instance",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "CyPerfUI",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "AvailabilityZone": {
            "Default": "<Select preffered availability zone from drop down>",
            "Description": "Preferred availability zone",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "InstanceTypeForCyPerfAgent": {
            "AllowedValues": [
                "c5.2xlarge",
                "c5n.9xlarge"
            ],
            "Default": "c5.2xlarge",
            "Description": "CyPerf instance type",
            "Type": "String"
        },
        "KeyNameForCyPerfAgent": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair",
            "Default": "CyPerf-keypair",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the CyPerf instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "ControllerNetworkCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.1.0/24",
            "Description": "This subnet is attached to CyPerf controller and would be used to access the CyPerf controllers' UI",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "AgentControlCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.2.0/24",
            "Description": "CyPerf agents will use this subnet for control plane communication with controller",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "AllowedSubnet": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "1.1.1.1/1",
            "Description": "Subnet range allowed to access deployed AWS resources. Execute 'curl ifconfig.co' to know MyIP or google for \u201cwhat is my IP\u201d",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "Project": {
            "Default": "CyPerf-AWS",
            "Description": "Project Name",
            "Type": "String"
        },
        "AgentTestCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.3.0/24",
            "Description": "CyPerf agents will use this subnet for test traffic",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "Username": {
            "Default": "<UserName>@<domainname>",
            "Description": "Team or Individual email id responsible for the Stack",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.0.0/16",
            "Description": "CIDR range for the VPC",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "DeployClientAgent": {
            "Description": "Want to deploy Client Agent?",
            "Default": "yes",
            "Type": "String",
            "AllowedValues": [
                "yes",
                "no"
            ],
            "ConstraintDescription": "must specify yes or no."
        },
        "DeployServerAgent": {
            "Description": "Want to deploy Server Agent?",
            "Default": "yes",
            "Type": "String",
            "AllowedValues": [
                "yes",
                "no"
            ],
            "ConstraintDescription": "must specify yes or no."
        },
        "EC2RoleForTags": {
            "Description": "Display Agents by tags in CyPerf UI",
            "Default": "no",
            "Type": "String",
            "AllowedValues": [
                "yes",
                "no"
            ],
            "ConstraintDescription": "must specify yes or no."
        },
        "AuthUsername": {
            "Default": "admin",
            "Description": "Username for agent to controller authentication",
            "Type": "String"
        },
        "AuthPassword": {
            "Default": "CyPerf&Keysight#1",
            "Description": "Password for agent to controller authentication",
            "Type": "String"
        },
        "AuthFingerprint": {
            "Default": "",
            "Description": "Fingerprint for agent to controller authentication - OPTIONAL",
            "Type": "String"
        }
    },
    "Conditions": {
        "CreateClientAgent": {
            "Fn::Equals": [
                {
                    "Ref": "DeployClientAgent"
                },
                "yes"
            ]
        },
        "CreateServerAgent": {
            "Fn::Equals": [
                {
                    "Ref": "DeployServerAgent"
                },
                "yes"
            ]
        },
        "FetchTagsForAgent": {
            "Fn::Equals": [
                {
                    "Ref": "EC2RoleForTags"
                },
                "yes"
            ]
        }
    },
    "Resources": {
        "DhcpOptionsAssociation": {
            "Properties": {
                "DhcpOptionsId": {
                    "Ref": "VPCxDhcpOptions"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation"
        },
        "EC2IfaceRole": {
            "Condition": "FetchTagsForAgent",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeInstances",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeTags"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "EC2IfacePolicy"
                                ]
                            ]
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "EC2IfaceRole"
                        ]
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "EC2InstanceProfile": {
            "Condition": "FetchTagsForAgent",
            "DependsOn": "EC2IfaceRole",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "EC2IfaceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "DefaultEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Fn::GetAtt": [
                        "VPC",
                        "DefaultSecurityGroup"
                    ]
                },
                "IpProtocol": "-1",
                "DestinationSecurityGroupId": {
                    "Fn::GetAtt": [
                        "VPC",
                        "DefaultSecurityGroup"
                    ]
                }
            }
        },
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-gateway"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "InternetGatewayAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "CyPerfUISecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "All Traffic",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CyPerfUISG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "CyPerfUI": {
            "DependsOn": [
                "mdweth0"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxAPPLICATION"
                    ]
                },
                "InstanceType": "c5.2xlarge",
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "mdweth0"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Controller"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "AgentSecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "All Traffic",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CyPerfAgentSG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "Nat": {
            "DependsOn": "ControllerManagementSubnet",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NatEip",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                }
            },
            "Type": "AWS::EC2::NatGateway"
        },
        "NatEip": {
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "NatRoute": {
            "DependsOn": "ControllerManagementSubnet",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "Nat"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "ClientAgent": {
            "Condition": "CreateClientAgent",
            "DependsOn": [
                "clieth0",
                "clieth1",
                "CyPerfUI"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Fn::If": [
                        "FetchTagsForAgent",
                        {
                            "Ref": "EC2InstanceProfile"
                        },
                        ""
                    ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxAGENT"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "clieth0"
                        }
                    },
                    {
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "clieth1"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "CyPerfUI",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " --username \"",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "AuthUsername"
                                            }
                                        ]
                                    ]
                                },
                                "\" --password \"",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "AuthPassword"
                                            }
                                        ]
                                    ]
                                },
                                "\" --fingerprint \"",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "AuthFingerprint"
                                            }
                                        ]
                                    ]
                                },
                                "\" >> /var/log/Appsec_init.log\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ClientAgent"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "ServerAgent": {
            "Condition": "CreateServerAgent",
            "DependsOn": [
                "clieth0",
                "clieth1",
                "CyPerfUI"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Fn::If": [
                        "FetchTagsForAgent",
                        {
                            "Ref": "EC2InstanceProfile"
                        },
                        ""
                    ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxAGENT"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "svreth0"
                        }
                    },
                    {
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "svreth1"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "CyPerfUI",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " --username \"",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "AuthUsername"
                                            }
                                        ]
                                    ]
                                },
                                "\" --password \"",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "AuthPassword"
                                            }
                                        ]
                                    ]
                                },
                                "\" --fingerprint \"",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Ref": "AuthFingerprint"
                                            }
                                        ]
                                    ]
                                },
                                "\" >> /var/log/Appsec_init.log\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ServerAgent"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "PrivateRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "private-rt"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "AgentControlSubnetRouteTable": {
            "DependsOn": "AgentControlSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "AgentControlSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "AgentTestSubnetRouteTable": {
            "DependsOn": "AgentTestSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "AgentTestSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PublicRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "public-rt"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "ControllerManagementSubnetRouteTable": {
            "DependsOn": "ControllerManagementSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "RouteToInternet": {
            "DependsOn": "InternetGatewayAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "AgentControlSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "CidrBlock": {
                    "Ref": "AgentControlCIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Agent Control Subnet"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "AgentTestSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "CidrBlock": {
                    "Ref": "AgentTestCIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Agent Test Subnet"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "ControllerManagementSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "CidrBlock": {
                    "Ref": "ControllerNetworkCIDR"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Controller Management Subnet"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "VPC": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "VPCxDhcpOptions": {
            "Properties": {
                "DomainName": "VPCxDhcpOptions",
                "DomainNameServers": [
                    "8.8.8.8",
                    "8.8.4.4",
                    "AmazonProvidedDNS"
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "CyPerfVPCx"
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::DHCPOptions"
        },
        "clieth0": {
            "Condition": "CreateClientAgent",
            "Properties": {
                "Description": "Client Agent eth0/ens4",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentControlSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "clieth1": {
            "Condition": "CreateClientAgent",
            "Properties": {
                "Description": "Client Agent eth1/ens5",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentTestSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "svreth0": {
            "Condition": "CreateServerAgent",
            "Properties": {
                "Description": "Server Agent eth0/ens4",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentControlSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "SA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "svreth1": {
            "Condition": "CreateServerAgent",
            "Properties": {
                "Description": "Server Agent eth1/ens5",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentTestSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "SA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "mdweth0": {
            "Properties": {
                "Description": "MDW eth0",
                "GroupSet": [
                    {
                        "Ref": "CyPerfUISecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "MB-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        }
    }
}
