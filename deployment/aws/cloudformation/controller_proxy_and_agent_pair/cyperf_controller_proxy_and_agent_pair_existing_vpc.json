{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "\n    Stack creating a VPC and launch EC2 instances within it.\n    **WARNING** This template creates Amazon EC2 instances.\n    You will be billed for the AWS resources used if you create\n    a stack from this template. **WARNING** This template creates\n    role for the launching/deleting instances/subnets/interfaces.\n    This role will invoke AWSLambdaBasicExecutionRole, please see\n    AWS Documentation for details on AWSLambdaBasicExecutionRole.",
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "AMIxAPPLICATION": "ami-0554d4a9f8dea8d96",
                "AMIxBROKER": "ami-0b49e29d797c4a7fb",
                "AMIxAGENT": "ami-0670c353027c0e161",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "US East (N. Virginia)",
                "REGIONxTAG": "US_EAST_1"
            },
            "us-east-2": {
                "AMIxAPPLICATION": "ami-05993d9156662aba5",
                "AMIxBROKER": "ami-02525f664891e45fc",
                "AMIxAGENT": "ami-0d2e52cf48fd055aa",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.16.146.0/29",
                "EC2xREGION": "US East (Ohio)",
                "REGIONxTAG": "US_EAST_2"
            },
            "us-west-1": {
                "AMIxAPPLICATION": "ami-07179d39561302eec",
                "AMIxBROKER": "ami-074c83e612ef97274",
                "AMIxAGENT": "ami-083e542974d2c1ec7",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.52.6.112/29",
                "EC2xREGION": "US West (N. California)",
                "REGIONxTAG": "US_WEST_1"
            },
            "us-west-2": {
                "AMIxAPPLICATION": "ami-05e4ef11e71e1a765",
                "AMIxBROKER": "ami-05d9a61ade52bd7ad",
                "AMIxAGENT": "ami-0448f864cddf96b3f",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.237.140.160/29",
                "EC2xREGION": "US West (Oregon)",
                "REGIONxTAG": "US_WEST_2"
            },
            "ap-east-1": {
                "AMIxAPPLICATION": "ami-00000000000000000",
                "AMIxBROKER": "ami-00000000000000000",
                "AMIxAGENT": "ami-00000000000000000",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "Asia Pacific (Hong Kong)",
                "REGIONxTAG": "AP_EAST_1"
            },
            "ap-south-1": {
                "AMIxAPPLICATION": "ami-019850f5ad28890ef",
                "AMIxBROKER": "ami-01cb814d6cedb9b55",
                "AMIxAGENT": "ami-04bf3661b4f552039",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.233.177.0/29",
                "EC2xREGION": "Asia Pacific (Mumbai)",
                "REGIONxTAG": "AP_SOUTH_1"
            },
            "ap-northeast-2": {
                "AMIxAPPLICATION": "ami-04a7bba9d7c71c1cd",
                "AMIxBROKER": "ami-0f3f7d20cb11c7211",
                "AMIxAGENT": "ami-03949255444920129",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.209.1.56/29",
                "EC2xREGION": "Asia Pacific (Seoul)",
                "REGIONxTAG": "AP_NORTHEAST_2"
            },
            "ap-southeast-1": {
                "AMIxAPPLICATION": "ami-0249f3b5d85f12929",
                "AMIxBROKER": "ami-07f792c6233d465bb",
                "AMIxAGENT": "ami-097e3b523eff87b59",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.0.5.32/29",
                "EC2xREGION": "Asia Pacific (Singapore)",
                "REGIONxTAG": "AP_SOUTHEAST_1"
            },
            "ap-southeast-2": {
                "AMIxAPPLICATION": "ami-058849548f2247b4b",
                "AMIxBROKER": "ami-0db11baf5fc2d82a5",
                "AMIxAGENT": "ami-0f63bbf86df7ce0a5",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.239.158.0/29",
                "EC2xREGION": "Asia Pacific (Sydney)",
                "REGIONxTAG": "AP_SOUTHEAST_2"
            },
            "ap-northeast-1": {
                "AMIxAPPLICATION": "ami-00f82d39600f30e5f",
                "AMIxBROKER": "ami-09b21761888df37b8",
                "AMIxAGENT": "ami-0f102a2148f1f2a08",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.112.23.0/29",
                "EC2xREGION": "Asia Pacific (Tokyo)",
                "REGIONxTAG": "AP_NORTHEAST_1"
            },
            "ca-central-1": {
                "AMIxAPPLICATION": "ami-09aa3d8a285e9ffe4",
                "AMIxBROKER": "ami-09b7ad827b1f88af0",
                "AMIxAGENT": "ami-09871ec767c423650",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "35.183.92.176/29",
                "EC2xREGION": "Canada (Central)",
                "REGIONxTAG": "CA_CENTRAL_1"
            },
            "eu-central-1": {
                "AMIxAPPLICATION": "ami-0e4fc9695eccf6af9",
                "AMIxBROKER": "ami-01484b953150ad766",
                "AMIxAGENT": "ami-0fa19e8bb647a35dd",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.120.181.40/29",
                "EC2xREGION": "EU (Frankfurt)",
                "REGIONxTAG": "EU_CENTRAL_1"
            },
            "eu-west-1": {
                "AMIxAPPLICATION": "ami-088d9f604e9e06cb7",
                "AMIxBROKER": "ami-025292f59a5640f12",
                "AMIxAGENT": "ami-093f8fd4abb59ca30",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.202.216.48/29",
                "EC2xREGION": "EU (Ireland)",
                "REGIONxTAG": "EU_WEST_1"
            },
            "eu-west-2": {
                "AMIxAPPLICATION": "ami-06341c8af7d1995f4",
                "AMIxBROKER": "ami-0a9717fe2b808af2e",
                "AMIxAGENT": "ami-0a81040f56882c76e",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "3.8.37.24/29",
                "EC2xREGION": "EU (London)",
                "REGIONxTAG": "EU_WEST_2"
            },
            "eu-west-3": {
                "AMIxAPPLICATION": "ami-09fb9cc207c57ec1d",
                "AMIxBROKER": "ami-03d45dd7f9d2c7db1",
                "AMIxAGENT": "ami-01d5d1da01584cf31",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "35.180.112.80/29",
                "EC2xREGION": "EU (Paris)",
                "REGIONxTAG": "EU_WEST_3"
            },
            "eu-north-1": {
                "AMIxAPPLICATION": "ami-0f94ecdef598df69b",
                "AMIxBROKER": "ami-032a5aa14ad9f6303",
                "AMIxAGENT": "ami-0de9505947ec7bd59",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "EU (Stockholm)",
                "REGIONxTAG": "EU_NORTH_1"
            },
            "me-south-1": {
                "AMIxAPPLICATION": "ami-00000000000000000",
                "AMIxBROKER": "ami-00000000000000000",
                "AMIxAGENT": "ami-00000000000000000",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "Middle East (Bahrain)",
                "REGIONxTAG": "ME_SOUTH_1"
            },
            "sa-east-1": {
                "AMIxAPPLICATION": "ami-065fab4db6100a1a0",
                "AMIxBROKER": "ami-08fef5e0157584f54",
                "AMIxAGENT": "ami-08bc35fdf5ef52f19",
                "AMIxLICENSE": "ami-00000000000000000",
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "South America (Sao Paulo)",
                "REGIONxTAG": "SA_EAST_1"
            }
        },
        "VariableMap": {
            "global": {
                "OPTIONSxTAG": "MANUAL",
                "PROJECTxTAG": "CyPerf"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORK CONFIGURATION"
                    }
                },
                {
                    "Label": {
                        "default": "VPC Configuration"
                    },
                    "Parameters": [
                        "Username",
                        "Project",
                        "VPCCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Controller Proxy Configuration"
                    },
                    "Parameters": [
                        "ControllerProxyManagementSubnet",
                        "CyPerfControllerProxySecurityGroup"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Agent Configuration"
                    },
                    "Parameters": [
                        "DeployClientAgent",
                        "DeployServerAgent",
                        "EC2RoleForTags",
                        "InstanceTypeForCyPerfAgent",
                        "KeyNameForCyPerfAgent",
                        "AgentControlSubnet",
                        "AgentTestSubnet",
                        "AgentSecurityGroup"
                    ]
                },
                {
                    "Label": {
                        "default": "Security-Group Configuration"
                    },
                    "Parameters": [
                        "AllowedSubnet"
                    ]
                }
            ],
            "ParameterLabels": {
                "InstanceTypeForCyPerfAgent": {
                    "default": "Instance Type for CyPerf Agents"
                },
                "KeyNameForCyPerfAgent": {
                    "default": "SSH Key"
                },
                "DeployClientAgent": {
                    "default": "Deploy Client Agent"
                },
                "DeployServerAgent": {
                    "default": "Deploy Server Agent"
                },
                "ControllerProxyManagementSubnet": {
                    "default": "Management Subnet for CyPerf Controller Proxy"
                },
                "AgentControlSubnet": {
                    "default": "Control Subnet for CyPerf Agents"
                },
                "AgentTestSubnet": {
                    "default": "Test Subnet for CyPerf Agents"
                },
                "CyPerfControllerProxySecurityGroup": {
                    "default": "Security Group of CyPerf Contoller Proxy"
                },
                "AgentSecurityGroup": {
                    "default": "Security Group of CyPerf Agent"
                },
                "VPCCIDR": {
                    "default": "VPC"
                }
            }
        }
    },
    "Outputs": {
        "CyPerfControllerProxyINstanceDNS": {
            "Description": "DNS name of CyPerf Controller Proxy instance",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "CyPerfControllerProxy",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "InstanceTypeForCyPerfAgent": {
            "AllowedValues": [
                "c5.2xlarge",
                "c5n.9xlarge"
            ],
            "Default": "c5.2xlarge",
            "Description": "CyPerf instance type",
            "Type": "String"
        },
        "CyPerfControllerProxySecurityGroup": {
            "Default": "<Select CyPerf Controller proxy security group from drop down list>",
            "Description": "Preferred Existing Security Group subnet for CyPerf Controller",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "AgentSecurityGroup": {
            "Default": "<Select CyPerf Agent security group from drop down list>",
            "Description": "Preferred Existing Security Group for CyPerf Agent",
            "Type": "AWS::EC2::SecurityGroup::Id"
        },
        "KeyNameForCyPerfAgent": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair",
            "Default": "CyPerf-keypair",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the CyPerf instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "AgentControlSubnet": {
            "Default": "<Select Control Subnet for CyPerf Agents from drop down list>",
            "Description": "Preferred Existing Control subnet for CyPerf Agent",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "AgentTestSubnet": {
            "Default": "<Select Test Subnet for CyPerf Agents from drop down list>",
            "Description": "Preferred Existing Test subnet for CyPerf Agent",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "ControllerProxyManagementSubnet": {
            "Default": "<Select Management Subnet for CyPerf Controller Proxy from drop down list>",
            "Description": "Preferred Existing Management subnet for CyPerf Controller Proxy. This subnet is attached to CyPerf Controller Proxy",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "Project": {
            "Default": "CyPerf-AWS",
            "Description": "Project Name",
            "Type": "String"
        },
        "Username": {
            "Default": "<UserName>@<domainname>",
            "Description": "Team or Individual email id responsible for the Stack",
            "Type": "String"
        },
        "VPCCIDR": {
            "Default": "<Select VPC from drop down list>",
            "Description": "Preferred Existing VPC",
            "Type": "AWS::EC2::VPC::Id"
        },
        "DeployClientAgent": {
            "Description": "Want to deploy Client Agent?",
            "Default": "yes",
            "Type": "String",
            "AllowedValues": [
                "yes",
                "no"
            ],
            "ConstraintDescription": "must specify yes or no."
        },
        "DeployServerAgent": {
            "Description": "Want to deploy Server Agent?",
            "Default": "yes",
            "Type": "String",
            "AllowedValues": [
                "yes",
                "no"
            ],
            "ConstraintDescription": "must specify yes or no."
        },
        "EC2RoleForTags": {
            "Description": "Want to fetch tags for Agent?",
            "Default": "yes",
            "Type": "String",
            "AllowedValues": [
                "yes",
                "no"
            ],
            "ConstraintDescription": "must specify yes or no."
        }
    },
    "Conditions": {
        "CreateClientAgent": {
            "Fn::Equals": [
                {
                    "Ref": "DeployClientAgent"
                },
                "yes"
            ]
        },
        "CreateServerAgent": {
            "Fn::Equals": [
                {
                    "Ref": "DeployServerAgent"
                },
                "yes"
            ]
        },
        "FetchTagsForAgent": {
            "Fn::Equals": [
                {
                    "Ref": "EC2RoleForTags"
                },
                "yes"
            ]
        }
    },
    "Resources": {
        "EC2IfaceRole": {
            "Condition": "FetchTagsForAgent",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeInstances",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeTags"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "EC2IfacePolicy"
                                ]
                            ]
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "EC2IfaceRole"
                        ]
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "EC2InstanceProfile": {
            "Condition": "FetchTagsForAgent",
            "DependsOn": "EC2IfaceRole",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "EC2IfaceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "CyPerfControllerProxy": {
            "DependsOn": [
                "proxyeth0"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "30",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxBROKER"
                    ]
                },
                "InstanceType": "t2.medium",
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "proxyeth0"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ControllerProxy"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "ClientAgent": {
            "Condition": "CreateClientAgent",
            "DependsOn": [
                "clieth0",
                "clieth1",
                "CyPerfControllerProxy"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Fn::If": [
                        "FetchTagsForAgent",
                        {
                            "Ref": "EC2InstanceProfile"
                        },
                        ""
                    ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxAGENT"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "clieth0"
                        }
                    },
                    {
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "clieth1"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "CyPerfControllerProxy",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /var/log/Appsec_init.log\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ClientAgent"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "ServerAgent": {
            "Condition": "CreateServerAgent",
            "DependsOn": [
                "svreth0",
                "svreth1",
                "CyPerfControllerProxy"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Fn::If": [
                        "FetchTagsForAgent",
                        {
                            "Ref": "EC2InstanceProfile"
                        },
                        ""
                    ]
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIxAGENT"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "svreth0"
                        }
                    },
                    {
                        "DeviceIndex": "1",
                        "NetworkInterfaceId": {
                            "Ref": "svreth1"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "CyPerfControllerProxy",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " >> /var/log/Appsec_init.log\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ServerAgent"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "clieth0": {
            "Condition": "CreateClientAgent",
            "Properties": {
                "Description": "Client Agent eth0/ens4",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentControlSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "clieth1": {
            "Condition": "CreateClientAgent",
            "Properties": {
                "Description": "Client Agent eth1/ens5",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentTestSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "svreth0": {
            "Condition": "CreateServerAgent",
            "Properties": {
                "Description": "Server Agent eth0/ens4",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentControlSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "SA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "svreth1": {
            "Condition": "CreateServerAgent",
            "Properties": {
                "Description": "Server Agent eth1/ens5",
                "GroupSet": [
                    {
                        "Ref": "AgentSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentTestSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "SA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "proxyeth0": {
            "Properties": {
                "Description": "Contoller proxy eth0",
                "GroupSet": [
                    {
                        "Ref": "CyPerfControllerProxySecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "ControllerProxyManagementSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "MB-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Ref": "Project"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "global",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "Username"
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        }
    }
}
