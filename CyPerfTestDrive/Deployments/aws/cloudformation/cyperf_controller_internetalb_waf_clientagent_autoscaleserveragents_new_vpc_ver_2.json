{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "\n    Stack creating a VPC and launch EC2 instances within it.\n    **WARNING** This template creates Amazon EC2 instances.\n    You will be billed for the AWS resources used if you create\n    a stack from this template. **WARNING** This template creates\n    role for the launching/deleting instances/subnets/interfaces.\n    This role will invoke AWSLambdaBasicExecutionRole, please see\n    AWS Documentation for details on AWSLambdaBasicExecutionRole. For StackName please specify only Alphanumeric characters and maximum 10 characters as this CFT invoke a nested CFT.",
    "Mappings" : {
		"RegionMap" : {
			"us-east-1" : {
				"AMIxAPPLICATION" : "ami-08ab3665f1d5b90a2",
				"AMIxBROKER" : "ami-084936f7f6543d74a",
				"AMIxAGENT" : "ami-02bcc48f9a2960e2a",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.206.107.24/29",
				"EC2xREGION" : "US East (N. Virginia)",
				"REGIONxTAG" : "US_EAST_1"
			},
			"us-east-2" : {
				"AMIxAPPLICATION" : "ami-04e6cb0686a59cb29",
				"AMIxBROKER" : "ami-0aa18efc6680f03fb",
				"AMIxAGENT" : "ami-0afdb6c7e300fd389",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.16.146.0/29",
				"EC2xREGION" : "US East (Ohio)",
				"REGIONxTAG" : "US_EAST_2"
			},
			"us-west-1" : {
				"AMIxAPPLICATION" : "ami-0740775f911be6858",
				"AMIxBROKER" : "ami-0d68babe0aff26974",
				"AMIxAGENT" : "ami-0843a0aac6a140566",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.52.6.112/29",
				"EC2xREGION" : "US West (N. California)",
				"REGIONxTAG" : "US_WEST_1"
			},
			"us-west-2" : {
				"AMIxAPPLICATION" : "ami-06c470ae058e55707",
				"AMIxBROKER" : "ami-0aab71c8f3dc9d3cf",
				"AMIxAGENT" : "ami-059b88d8237cfdeef",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.237.140.160/29",
				"EC2xREGION" : "US West (Oregon)",
				"REGIONxTAG" : "US_WEST_2"
			},
			"ap-east-1" : {
				"AMIxAPPLICATION" : "ami-00000000000000000",
				"AMIxBROKER" : "ami-00000000000000000",
				"AMIxAGENT" : "ami-00000000000000000",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.206.107.24/29",
				"EC2xREGION" : "Asia Pacific (Hong Kong)",		
				"REGIONxTAG" : "AP_EAST_1"
			},
			"ap-south-1" : {
				"AMIxAPPLICATION" : "ami-0ac5de698544fc683",
				"AMIxBROKER" : "ami-05620095768442508",
				"AMIxAGENT" : "ami-07c5170eeaf6605a2",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.233.177.0/29",
				"EC2xREGION" : "Asia Pacific (Mumbai)",
				"REGIONxTAG" : "AP_SOUTH_1"
			},
			"ap-northeast-2" : {
				"AMIxAPPLICATION" : "ami-0ac7a32ba5d153e83",
				"AMIxBROKER" : "ami-0ea053c327c1cd15a",
				"AMIxAGENT" : "ami-0e00f9a3a244da57c",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.209.1.56/29",
				"EC2xREGION" : "Asia Pacific (Seoul)",
				"REGIONxTAG" : "AP_NORTHEAST_2"
			},
			"ap-southeast-1" : {
				"AMIxAPPLICATION" : "ami-08c47af4a90f3a26c",
				"AMIxBROKER" : "ami-0d2d105fb5b4071f6",
				"AMIxAGENT" : "ami-049f2326177509ac2",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.0.5.32/29",
				"EC2xREGION" : "Asia Pacific (Singapore)",
				"REGIONxTAG" : "AP_SOUTHEAST_1"
			},
			"ap-southeast-2" : {
				"AMIxAPPLICATION" : "ami-07601e3862f5c87c3",
				"AMIxBROKER" : "ami-0244db66df53f36af",
				"AMIxAGENT" : "ami-0f64bab17af57992f",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.239.158.0/29",
				"EC2xREGION" : "Asia Pacific (Sydney)",
				"REGIONxTAG" : "AP_SOUTHEAST_2"
			},
			"ap-northeast-1" : {
				"AMIxAPPLICATION" : "ami-02d6333f8b3dba8ad",
				"AMIxBROKER" : "ami-09da5dc6fbd710e14",
				"AMIxAGENT" : "ami-06840472ad79ab126",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.112.23.0/29",
				"EC2xREGION" : "Asia Pacific (Tokyo)",
				"REGIONxTAG" : "AP_NORTHEAST_1"
			},
			"ca-central-1" : {
				"AMIxAPPLICATION" : "ami-0f409932bb81434d2",
				"AMIxBROKER" : "ami-0ca00ceb73deb33f8",
				"AMIxAGENT" : "ami-0a9e78a744d13d9c2",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "35.183.92.176/29",
				"EC2xREGION" : "Canada (Central)",
				"REGIONxTAG" : "CA_CENTRAL_1"
			},
			"eu-central-1" : {
				"AMIxAPPLICATION" : "ami-064eaf2e8ff1a1c27",
				"AMIxBROKER" : "ami-0beea20b571a8a7d2",
				"AMIxAGENT" : "ami-06ccb8e181dbf55ba",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.120.181.40/29",
				"EC2xREGION" : "EU (Frankfurt)",
				"REGIONxTAG" : "EU_CENTRAL_1"
			},
			"eu-west-1" : {
				"AMIxAPPLICATION" : "ami-00c322c4ab51e0b51",
				"AMIxBROKER" : "ami-0af21ee2215c6d5ad",
				"AMIxAGENT" : "ami-08a5bae66db4c3e74",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.202.216.48/29",
				"EC2xREGION" : "EU (Ireland)",
				"REGIONxTAG" : "EU_WEST_1"
			},
			"eu-west-2" : {
				"AMIxAPPLICATION" : "ami-0aedf969abb15337f",
				"AMIxBROKER" : "ami-0b1bc17ae8312ae90",
				"AMIxAGENT" : "ami-02a24c91c493fc5d5",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "3.8.37.24/29",
				"EC2xREGION" : "EU (London)",
				"REGIONxTAG" : "EU_WEST_2"
			},
			"eu-west-3" : {
				"AMIxAPPLICATION" : "ami-0e7ac84abce19adca",
				"AMIxBROKER" : "ami-07a3ea610824ec471",
				"AMIxAGENT" : "ami-086294ab305047081",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "35.180.112.80/29",
				"EC2xREGION" : "EU (Paris)",
				"REGIONxTAG" : "EU_WEST_3"
			},
			"eu-north-1" : {
				"AMIxAPPLICATION" : "ami-08632abb9cf6063df",
				"AMIxBROKER" : "ami-002af6721d38184db",
				"AMIxAGENT" : "ami-0671a9d7dd3c5544d",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.48.4.200/30",
				"EC2xREGION" : "EU (Stockholm)",
				"REGIONxTAG" : "EU_NORTH_1"
			},
			"me-south-1" : {
				"AMIxAPPLICATION" : "ami-00000000000000000",
				"AMIxBROKER" : "ami-00000000000000000",
				"AMIxAGENT" : "ami-00000000000000000",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "18.206.107.24/29",
				"EC2xREGION" : "Middle East (Bahrain)",		
				"REGIONxTAG" : "ME_SOUTH_1"
			},
			"sa-east-1" : {
				"AMIxAPPLICATION" : "ami-012d0097a78e1edfb",
				"AMIxBROKER" : "ami-06b8466d8eb78c9f9",
				"AMIxAGENT" : "ami-08b60815f86683e86",
				"AMIxLICENSE" : "ami-00000000000000000",
				"EC2xCONNECTxCIDR" : "13.48.4.200/30",
				"EC2xREGION" : "South America (Sao Paulo)",
				"REGIONxTAG" : "SA_EAST_1"
			}
		},
		"VariableMap" : {
			"global" : {
                "OPTIONSxTAG" : "MANUAL",
                "PROJECTxTAG" : "CyPerf"
			}
		}
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "NETWORK CONFIGURATION"
                    }
                },
                {
                    "Label": {
                        "default": "VPC Configuration"
                    },
                    "Parameters": [
                        "Username",
                        "Project",
                        "AvailabilityZone1",
                        "AvailabilityZone2",
                        "VPCCIDR",
                        "ControllerNetworkCIDR1",
                        "ControllerNetworkCIDR2"
                    ]
                },
                {
                    "Label": {
                        "default": "CyPerf Agent Configuration"
                    },
                    "Parameters": [
                        "InstanceTypeForCyPerfAgent",
                        "KeyNameForCyPerfAgent",
                        "TagBehindApplicationLB",
                        "AgentTestCIDR1",
                        "AgentTestCIDR2",
                        "AgentControlCIDR1",
                        "AgentControlCIDR2"
                    ]
                },
                {
                    "Label": {
                        "default": "Security-Group Configuration"
                    },
                    "Parameters": [
                        "AllowedSubnet"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZone1": {
                    "default": "Availability Zone 1"
                },
                "AvailabilityZone2": {
                    "default": "Availability Zone 2"
                },
                "InstanceCount": {
                    "default": "Instance Count"
                },
                "InstanceTypeForCyPerfAgent": {
                    "default": "Instance Type for CyPerf Agents"
                },
                "KeyNameForCyPerfAgent": {
                    "default": "SSH Key"
                },
                "AgentControlCIDR1": {
                    "default": "Control Subnet for CyPerf Agents for AZ1"
                },
                "AgentControlCIDR2": {
                    "default": "Control Subnet for CyPerf Agents for AZ2"
                },
                "ControllerNetworkCIDR1": {
                    "default": "Management Subnet for CyPerf Controller for AZ1"
                },
                "ControllerNetworkCIDR2": {
                    "default": "Public subnet for AZ2"
                },
                "AllowedSubnet": {
                    "default": "Allowed Subnet for Security Group"
                },
                "TagBehindApplicationLB": {
                    "default": " Agents Tag running Behind Application LB"
                },
                "AgentTestCIDR1": {
                    "default": "Test Subnet for CyPerf Agents for AZ1"
                },
                "AgentTestCIDR2": {
                    "default": "Test Subnet for CyPerf Agents for AZ2"
                },
                "VPCCIDR": {
                    "default": "VPC"
                }
            }
        }
    },
    "Outputs": {
        "ApplicationLBTargetGroup": {
            "Description": "ARN of HTTP target group behind ALB",
            "Value": {
                "Ref": "TargetGroupWebApplication"
            }
        },
        "ApplicationLBTargetGroupHTTPS": {
            "Description": "ARN of HTTPS target group behind ALB",
            "Value": {
                "Ref": "TargetGroupWebApplicationHTTPS"
            }
        },
        "LaunchConfigurationName": {
            "Description": "Name of LaunchConfiguration",
            "Value": {
                "Ref": "LaunchConfiguration"
            }
        },
        "LoadBalacerALBURI": {
            "Description": "Application Load Balancer DNS name",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "ApplicationElasticLB",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        },
        "LoadBalacerALBArn": {
            "Description": "Application Load Balancer ARN name",
            "Value": {
                "Ref": "ApplicationElasticLB"
            }
        },
        "NatsMBINstanceDNS": {
            "Description": "DNS name of NatsMB instance",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "CyPerfUI",
                                "PublicDnsName"
                            ]
                        }
                    ]
                ]
            }
        },
        "StackRef": {"Value": { "Ref" : "Cyperfwaf"}},
        "WafID" : {
            "Description": "AWS WAF ID",  
            "Value" : { "Fn::GetAtt" : [ "Cyperfwaf", "Outputs.wafWebACL" ] }
        }
    },
    "Parameters": {
        "ApplicationLBHTTPHealthChkPort": {
            "Default": "80",
            "Description": "TCP/IP port of the ApplicationLB HTTP Health Check",
            "Type": "String"
        },
        "ApplicationLBHTTPListenerPort": {
            "Default": "80",
            "Description": "TCP/IP port of the ApplicationLB HTTP Listener",
            "Type": "String"
        },
        "AvailabilityZone1": {
            "Default": "us-west-2a",
            "Description": "Preferred Availability Zone where 1st server instance should deploy",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "AvailabilityZone2": {
            "Default": "us-west-2b",
            "Description": "Preferred Availability Zone where 2nd server instance should deploy",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "CertificateARN": {
            "Default": "<Specify ARN of server certificates>",
            "Description": "Retrieves a certificate specified by ARN & associate it with Load Balancer's HTTPS listener profile. Example: arn:aws:iam::<AccountID>:server-certificate/<Server certificate name>",
            "Type": "String"
        },
        "ApplicationLBHTTPSHealthChkPort": {
            "Default": "443",
            "Description": "TCP/IP port of the ApplicationLB HTTPS Health Check",
            "Type": "String"
        },
        "ApplicationLBHTTPSListenerPort": {
            "Default": "443",
            "Description": "TCP/IP port of the ApplicationLB HTTPS Listener",
            "Type": "String"
        },
        "InstanceTypeForCyPerfAgent": {
            "AllowedValues": [
                "c4.2xlarge",
                "c5n.9xlarge",
				"c5.large",
				"c5.4xlarge"
            ],
            "Default": "c4.2xlarge",
            "Description": "CyPerf instance type",
            "Type": "String"
        },
        "KeyNameForCyPerfAgent": {
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair",
            "Default": "CyPerf-keypair",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the CyPerf instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "AgentControlCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.5.0/24",
            "Description": "CyPerf agents at AZ1 will use this subnet for control plane communication with controller",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "AgentControlCIDR2": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.6.0/24",
            "Description": "CyPerf agents at AZ2 will use this subnet for control plane communication with controller",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "ControllerNetworkCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.1.0/24",
            "Description": "This subnet is attached to CyPerf controller and would be used to access the CyPerf controllers' UI. Also used for Load Balancer subnet for AZ1.",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "ControllerNetworkCIDR2": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.2.0/24",
            "Description": "This subnet is used for Load Balancer subnet for AZ2",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "AllowedSubnet": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "1.1.1.1/1",
            "Description": "Subnet range allowed to access deployed AWS resources",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "Project": {
            "Default": "CyPerf-AWS",
            "Description": "Project Name",
            "Type": "String"
        },
        "TagBehindApplicationLB": {
            "Default": "ServerFarmBehindALB",
            "Description": "CyPerf Agent Tag running behind Application LB",
            "Type": "String"
        },
        "AgentTestCIDR1": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.3.0/24",
            "Description": "CyPerf agents will use this subnet for test traffic at AZ1",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "AgentTestCIDR2": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.4.0/24",
            "Description": "CyPerf agents will use this subnet for test traffic at AZ2",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "Username": {
            "Default": "<UserName>@<domainname>",
            "Description": "Team or Individual email id responsible for the Stack",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "172.16.0.0/16",
            "Description": "CIDR range for the VPC",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "ScaleCapacityMax": {
            "Default": "2",
            "Description": "Number of maximum CyPerf Server Agent to run",
            "Type": "String"
        },
        "ScaleCapacityMin": {
            "Default": "2",
            "Description": "Number of minimum CyPerf Server Agent to run",
            "Type": "String"
        },
        "NetworkOutBytesPerMinute": {
            "Default": "100000",
            "Description": "Average network out capacity to trigger auto scaling",
            "Type": "String"
        }
    },
    "Resources": {
        "Cyperfwaf" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
              "TemplateURL" : "https://aws-cyperf.s3-us-west-2.amazonaws.com/owasp_10_base_custom.yml",
              "Parameters": {
                "stackPrefix": { "Ref": "AWS::StackName" }
            },
              "TimeoutInMinutes" : 120
            }
        },
        "ApplicationElasticLB": {
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-ApplicationLB"
                },
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "LoadBalancerSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "ControllerManagementSubnet"
                    },
                    {
                        "Ref": "LoadBalacerPublicSubnet"
                    }
                ]
            },
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
        },
        "DhcpOptionsAssociation": {
            "Properties": {
                "DhcpOptionsId": {
                    "Ref": "VPCxDhcpOptions"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation"
        },
        "EC2IfaceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeInstances",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:AttachNetworkInterface",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:DescribeTags"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "EC2IfacePolicy"
                                ]
                            ]
                        }
                    }
                ],
                "RoleName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "EC2IfaceRole"
                        ]
                    ]
                }
            },
            "Type": "AWS::IAM::Role"
        },
        "EC2InstanceProfile": {
            "DependsOn": "EC2IfaceRole",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "EC2IfaceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
		"DefaultEgress1": {
			"Type" : "AWS::EC2::SecurityGroupEgress",
			"Properties" : {
				"GroupId": { "Fn::GetAtt" : ["VPC", "DefaultSecurityGroup"] },
				"IpProtocol": "-1",
				"SourceSecurityGroupId": { "Fn::GetAtt" : ["VPC", "DefaultSecurityGroup"] }
			}
		},
        "InternetGateway": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-gateway"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "InternetGatewayAttachment": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "LaunchConfiguration": {
            "DependsOn": [
                "CyPerfUI",
                "EC2InstanceProfile"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination" : true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMIxAGENT"] },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "SecurityGroups": [
                    {
                        "Ref": "MgmtInstanceSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "CyPerfUI",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " --behind-alb",
                                " >> /var/log/Appsec_init.log\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "ListenerApplication": {
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroupWebApplication"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationElasticLB"
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPListenerPort"
                },
                "Protocol": "HTTP"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "ListenerSSL": {
            "Properties": {
                "Certificates": [
                    {
                        "CertificateArn": {
                            "Ref": "CertificateARN"
                        }
                    }
                ],
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "TargetGroupWebApplicationHTTPS"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ApplicationElasticLB"
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPSListenerPort"
                },
                "Protocol": "HTTPS"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "CyPerfUISecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "All Traffic",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "30422",
                        "IpProtocol": "tcp",
                        "ToPort": "30422"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "AllowedSubnet"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },                   
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "30422",
                        "IpProtocol": "tcp",
                        "ToPort": "30422"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CyPerfUISG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "LoadBalancerSecurityGroup": {
            "DependsOn": "MgmtInstanceSecurityGroup",
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                               "MgmtInstanceSecurityGroup",
                               "GroupId"
                            ]
                        },
                        "Description": "Custom TCP",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "SourceSecurityGroupId": {
                            "Fn::GetAtt": [
                               "MgmtInstanceSecurityGroup",
                               "GroupId"
                            ]
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "LoadBalancerSG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "MgmtInstanceSecurityGroup": {
            "Properties": {
                "GroupDescription": "Allow restricted-access to launched Instances",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "Description": "All Traffic",
                        "FromPort": "-1",
                        "IpProtocol": "-1",
                        "ToPort": "-1"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        },
                        "Description": "Custom TCP",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CyPerfAgentSG"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "Nat": {
            "DependsOn": "ControllerManagementSubnet",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NatEip",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                }
            },
            "Type": "AWS::EC2::NatGateway"
        },
        "NatEip": {
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "NatRoute": {
            "DependsOn": "ControllerManagementSubnet",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "Nat"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "CyPerfUI": {
            "DependsOn": [
                "mdweth0",
                "EC2InstanceProfile"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "100",
                            "DeleteOnTermination" : true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMIxAPPLICATION"] },
                "InstanceType": "c4.2xlarge",
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "mdweth0"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Application"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "ClientAgent": {
            "DependsOn": [
                "clieth0",
                "CyPerfUI",
                "EC2InstanceProfile"
            ],
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "8",
                            "DeleteOnTermination" : true
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMIxAGENT"] },
                "InstanceType": {
                    "Ref": "InstanceTypeForCyPerfAgent"
                },
                "KeyName": {
                    "Ref": "KeyNameForCyPerfAgent"
                },
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "NetworkInterfaceId": {
                            "Ref": "clieth0"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "cd /opt/keysight/tiger/active/bin/\n",
                                "sh /opt/keysight/tiger/active/bin/Appsec_init ",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            {
                                                "Fn::GetAtt": [
                                                    "CyPerfUI",
                                                    "PrivateIp"
                                                ]
                                            }
                                        ]
                                    ]
                                },
                                " --behind-alb",
                                " >> /var/log/Appsec_init.log\n"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "ClientAgent"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "PrivateRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "private-rt"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "AgentTestSubnetRouteTable1": {
            "DependsOn": "AgentTestSubnet1",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "AgentTestSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "AgentTestSubnetRouteTable2": {
            "DependsOn": "AgentTestSubnet2",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "AgentTestSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "AgentControlSubnetRouteTable1": {
            "DependsOn": "AgentControlSubnet1",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "AgentControlSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "AgentControlSubnetRouteTable2": {
            "DependsOn": "AgentControlSubnet2",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "AgentControlSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PublicRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "public-rt"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "ControllerManagementSubnetRouteTable": {
            "DependsOn": "ControllerManagementSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "LoadBalancerPublicSubnetRouteTable": {
            "DependsOn": "LoadBalacerPublicSubnet",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "LoadBalacerPublicSubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "RouteToInternet": {
            "DependsOn": "InternetGatewayAttachment",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "AgentTestSubnet1": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Ref": "AgentTestCIDR1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Agent Test subnet 1"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "AgentTestSubnet2": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone2"
                },
                "CidrBlock": {
                    "Ref": "AgentTestCIDR2"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Agent Test subnet 2"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "AgentControlSubnet1": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Ref": "AgentControlCIDR1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Agent contol MessageBrokerSubnet 1 "
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "AgentControlSubnet2": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone2"
                },
                "CidrBlock": {
                    "Ref": "AgentControlCIDR2"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Agent Control MessageBrokerSubnet 2"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "ControllerManagementSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Ref": "ControllerNetworkCIDR1"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Controller Management subnet"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "LoadBalacerPublicSubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone2"
                },
                "CidrBlock": {
                    "Ref": "ControllerNetworkCIDR2"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Load Balancer public subnet"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "TargetGroupWebApplication": {
            "Properties": {
                "HealthCheckIntervalSeconds": "6",
                "HealthCheckPath": "/CyPerfHTTPHealthCheck",
                "HealthCheckPort": {
                    "Ref": "ApplicationLBHTTPHealthChkPort"
                },
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": "5",
                "HealthyThresholdCount": "2",
                "Matcher": {
                    "HttpCode": "200"
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-TG-ApplicationLB"
                        ]
                    ]
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPListenerPort"
                },
                "Protocol": "HTTP",
                "Targets": [],
                "UnhealthyThresholdCount": "3",
                "VpcId": {
                    "Ref": "VPC"
                },
                "TargetGroupAttributes": [
                    {
                    "Key": "stickiness.enabled",
                    "Value": "false"
                    },
                    {
                    "Key" : "stickiness.lb_cookie.duration_seconds",
                    "Value" : 120
                    }
                ]     
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "TargetGroupWebApplicationHTTPS": {
            "Properties": {
                "HealthCheckIntervalSeconds": "6",
                "HealthCheckPath": "/CyPerfHTTPSHealthCheck",
                "HealthCheckPort": {
                    "Ref": "ApplicationLBHTTPSHealthChkPort"
                },
                "HealthCheckProtocol": "HTTPS",
                "HealthCheckTimeoutSeconds": "5",
                "HealthyThresholdCount": "2",
                "Matcher": {
                    "HttpCode": "200"
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-TG-HTTPSLoadBalancer"
                        ]
                    ]
                },
                "Port": {
                    "Ref": "ApplicationLBHTTPSListenerPort"
                },
                "Protocol": "HTTPS",
                "Targets": [],
                "UnhealthyThresholdCount": "3",
                "VpcId": {
                    "Ref": "VPC"
                },
                "TargetGroupAttributes": [
                    {
                    "Key": "stickiness.enabled",
                    "Value": "false"
                    },
                    {
                    "Key" : "stickiness.lb_cookie.duration_seconds",
                    "Value" : 120
                    }
                ]       
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "VPC": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        },
        "VPCxDhcpOptions": {
            "Properties": {
                "DomainName": "VPCxDhcpOptions",
                "DomainNameServers": [
                    "8.8.8.8",
                    "8.8.4.4",
                    "AmazonProvidedDNS"
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "CyPerfVPCx"
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::DHCPOptions"
        },
        "KeyVPCFlowLogAccessRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "vpc-flow-logs.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
                ],
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "KeyVpcFlowLog" : {
			"Type" : "AWS::EC2::FlowLog",
			"Properties" : {
				"DeliverLogsPermissionArn" : { "Fn::GetAtt" : ["KeyVPCFlowLogAccessRole", "Arn"] },
				"LogGroupName" : { "Fn::Join" : [ "_", [ { "Ref": "AWS::StackName" }, { "Fn::FindInMap" : [ "VariableMap", "global", "PROJECTxTAG"] }, "VPC_FLOW_LOG", 
							{ "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "REGIONxTAG"]} ] ] },
				"ResourceId" : { "Ref" : "VPC" },
				"ResourceType" : { "Fn::FindInMap" : [ "VariableMap", "global", "FLOWxLOGxRESOURCExTYPE"] },
				"TrafficType" : { "Fn::FindInMap" : [ "VariableMap", "global", "FLOWxLOGxTRAFFICxTYPE"] }
			}
		},
        "mdweth0": {
            "Properties": {
                "Description": "MDW eth0",
                "GroupSet": [
                    {
                        "Ref": "CyPerfUISecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "ControllerManagementSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "MB-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "clieth0": {
            "Properties": {
                "Description": "Client Agent eth0",
                "GroupSet": [
                    {
                        "Ref": "MgmtInstanceSecurityGroup"
                    }
                ],
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "AgentTestSubnet1"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "CA-Interface"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "Value": { "Ref": "Username" }
                    }
                ]
            },
            "Type": "AWS::EC2::NetworkInterface"
        },
        "AutoscalingGroupALB": {
            "Properties": {
                "AvailabilityZones": [
                    {
                        "Ref": "AvailabilityZone1"
                    },
                    {
                        "Ref": "AvailabilityZone2"
                    }
                ],
                "Cooldown" : "60",
                "DesiredCapacity": {
                    "Ref": "ScaleCapacityMin"
                },
                "HealthCheckType": "EC2",
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MaxSize": {
                    "Ref": "ScaleCapacityMax"
                },
                "MinSize": {
                    "Ref": "ScaleCapacityMin"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "PropagateAtLaunch": true,
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    {
                                        "Ref": "TagBehindApplicationLB"
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "TagName",
                        "PropagateAtLaunch": true,
                        "Value": "ServerFarmBehindALB"
                    },
                    {
                        "Key": "Project",
                        "PropagateAtLaunch": true,
                        "Value": { "Ref": "Project" }
                    },
					{
						"Key": "Options",
                        "PropagateAtLaunch": true,
						"Value": { "Fn::FindInMap" : [ "VariableMap", "global", "OPTIONSxTAG"] }
					},
                    {
                        "Key": "Owner",
                        "PropagateAtLaunch": true,
                        "Value": { "Ref": "Username" }
                    }
                ],
                "TargetGroupARNs": [
                    {
                        "Ref": "TargetGroupWebApplication"
                    },
                    {
                        "Ref": "TargetGroupWebApplicationHTTPS"
                    }
                ],
                "VPCZoneIdentifier": [
                    {
                        "Ref": "AgentTestSubnet1"
                    },
                    {
                        "Ref": "AgentTestSubnet2"
                    }
                ]
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                },
                "AutoScalingRollingUpdate": {
                    "MaxBatchSize": "1",
                    "MinInstancesInService": "1",
                    "PauseTime": "PT5M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },
        "AutoscalingPolicyALB": {
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "AutoscalingGroupALB"
                },
                "PolicyType": "TargetTrackingScaling",
                "TargetTrackingConfiguration": {
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "ASGAverageNetworkOut"
                    },
                    "TargetValue": {
                        "Ref": "NetworkOutBytesPerMinute"
                    }
                }
            },
            "Type": "AWS::AutoScaling::ScalingPolicy"
        },
        "MyWebACLAssociation": {
            "Type": "AWS::WAFRegional::WebACLAssociation",
            "Properties": {
              "ResourceArn": { "Ref": "ApplicationElasticLB" },
              "WebACLId": { "Fn::GetAtt" : [ "Cyperfwaf", "Outputs.wafWebACL" ] }
            }
        },
        "myLifecycleHook":{
            "Type":"AWS::AutoScaling::LifecycleHook",
            "Properties":{
                "AutoScalingGroupName":{
                  "Ref":"AutoscalingGroupALB"
                },
                "LifecycleTransition":"autoscaling:EC2_INSTANCE_LAUNCHING",
                "HeartbeatTimeout":180,
                "DefaultResult":"CONTINUE"
            }
        }      
    }
}
